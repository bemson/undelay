/* undelay! v0.0.1 | github.com/bemson | (c) 2012, MIT */
!function(window){var posts={},postIdx=0,postMessageOrigin,inFileProtocol,_postMessage=window.postMessage,_setTimeout=window.setTimeout,_clearTimeout=window.clearTimeout;typeof location=="object"&&typeof _postMessage=="function"&&typeof _setTimeout=="function"&&typeof _clearTimeout=="function"&&(inFileProtocol=!location.protocol.indexOf("file:"),postMessageOrigin=inFileProtocol?"*":location.protocol+"//"+location.host,window.setTimeout=function(a,b){var c=typeof a,d=[].slice.call(arguments,2);return postIdx++,b==0&&!c.search(/^[fs]/)?(c=="function"&&d.length&&(a=function(){a.apply(window,d)}),posts[postIdx]=a,_postMessage(postIdx,postMessageOrigin),postIdx):posts[postIdx]=_setTimeout.apply(window,arguments)},window.clearTimeout=function(a){var b=posts[a];posts.hasOwnProperty(a)&&(typeof b=="number"&&_clearTimeout(b),delete posts[a])},window.addEventListener("message",function(evt){var postCallback;(inFileProtocol||evt.origin==postMessageOrigin)&&typeof evt.data=="number"&&(postCallback=posts[evt.data])&&(delete posts[evt.data],typeof postCallback=="function"?postCallback():eval(postCallback))},!1))}(this);